<Activity mc:Ignorable="sap sap2010 sads" x:Class="RecoverCalculator"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_CanRecover" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>RecoverCalculator_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Model</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Model</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="RecoverCalculator" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:TimeSpan" Name="Time" />
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
      <Assign.To>
        <OutArgument x:TypeArguments="x:TimeSpan">[Time]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:TimeSpan">[new TimeSpan()]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[String.IsNullOrEmpty(Recovery.LastRecover)]" DisplayName="If is empty" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Assign DisplayName="Initialize LastRecover" sap2010:WorkflowViewState.IdRef="Assign_27">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[Recovery.LastRecover]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss")]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <If Condition="[String.IsNullOrEmpty(Recovery.RecoverLapse)]" DisplayName="If recover lapse is empty" sap2010:WorkflowViewState.IdRef="If_7">
      <If.Then>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[Recovery.RecoverLapse]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">30m, 30s</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[Split(Recovery.RecoverLapse.Replace(&quot; &quot;, &quot;&quot;), &quot;,&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="Part" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[Part.Last]" sap2010:WorkflowViewState.IdRef="Switch`1_4">
              <Assign x:Key="d" DisplayName="Set TimeSpan" sap2010:WorkflowViewState.IdRef="Assign_29">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:TimeSpan">[Time]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:TimeSpan">[Time.Add(TimeSpan.FromDays(Convert.ToDouble(Part.Remove(Part.Length - 1))))]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="m" DisplayName="Set TimeSpan" sap2010:WorkflowViewState.IdRef="Assign_30">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:TimeSpan">[Time]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:TimeSpan">[Time.Add(TimeSpan.FromMinutes(Convert.ToDouble(Part.Remove(Part.Length - 1))))]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="s" DisplayName="Set TimeSpan" sap2010:WorkflowViewState.IdRef="Assign_31">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:TimeSpan">[Time]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:TimeSpan">[Time.Add(TimeSpan.FromSeconds(Convert.ToDouble(Part.Remove(Part.Length - 1))))]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="h" DisplayName="Set TimeSpan" sap2010:WorkflowViewState.IdRef="Assign_32">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:TimeSpan">[Time]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:TimeSpan">[Time.Add(TimeSpan.FromHours(Convert.ToDouble(Part.Remove(Part.Length - 1))))]</InArgument>
                </Assign.Value>
              </Assign>
            </Switch>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[Directory.Exists(Config.DirectoryRecovery)]" DisplayName="If recoverydirectory exists" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[out_CanRecover]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[DateTime.Now.AddMinutes(1).Subtract(
Convert.ToDateTime(Recovery.LastRecover.Replace("'", ""), Globalization.CultureInfo.CreateSpecificCulture("es-ES"))
).TotalMilliseconds &lt; Time.TotalMilliseconds And
(Not String.IsNullOrEmpty(Recovery.ProcessMain) Or
Directory.GetFiles(Config.DirectoryRecovery).Count &gt; 0)]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[out_CanRecover]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <If Condition="[out_CanRecover]" DisplayName="If can recover, ask if wanna take the recover point" sap2010:WorkflowViewState.IdRef="If_9">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="Choosen" />
          </Sequence.Variables>
          <ui:MessageBox Buttons="YesNo" Caption="Alerta de punto de recuperación" ChosenButton="[Choosen]" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;El robot reconocio un punto de recuperación, ¿Desea continuar desde este punto?&quot; + Environment.NewLine + Environment.NewLine + &quot;Presione 'Si' para continuar desde dicho punto.&quot; + Environment.NewLine + &quot;Presione 'No' para comenzar el proceso de nuevo.&quot;]" TopMost="True" />
          <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_CanRecover]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">[Choosen = "Yes"]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>dzpEOlxLdWZhXFRlbXBsYXRlXFByb3llY3RvXEZyYW1ld29ya1xSZWNvdmVyQ2FsY3VsYXRvci54YW1sME8DzQEOAgEBUwVaDgIBOVsFZgoCATRnBXIKAgEvcwWfARICARqgAQW5AQoCARC6AQXLAQoCAQJYMlhCAgE8VTNVOQIBOlsTW0ECATVdCWQSAgE2ZxNnQgIBMGkJcBICATFzkAFz5AECAS55C5wBFgIBG6ABE6ABQQIBEaIBCa0BEgIBFrABCbcBEgIBEroBE7oBJQIBA7wBCckBFAIBBWI0YmICAThfNV9LAgE3bjRuPAIBM2s1a0wCATJ6DZsBFgIBHKQBNqQBRgIBF7UBNbUBOgIBFbIBNrIBRgIBE8ABC8AB6wMCAQvBAQvIARQCAQZ6UHpdAgEdew+CARgCASqDAQ+KARgCASaLAQ+SARgCASKTAQ+aARgCAR7AATLAAVMCAQ/AAbsBwAHZAwIBDsABYcABbAIBDMYBN8YBSAIBCcMBOMMBSAIBB4ABPIABiQECAS19PX1DAgEriAE8iAGMAQIBKYUBPYUBQwIBJ5ABPJABjAECASWNAT2NAUMCASOYATyYAYoBAgEhlQE9lQFDAgEf</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="514,60" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="514,208" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="514,208" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Switch`1_4" sap:VirtualizedContainerService.HintSize="476,204" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="498,328">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="514,462" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="514,212">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MessageBox_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,283">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="514,431" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="536,1905">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RecoverCalculator_1" sap:VirtualizedContainerService.HintSize="576,1985" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>